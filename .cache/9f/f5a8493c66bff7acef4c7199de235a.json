{"id":"classes/sidebar.js","dependencies":[{"name":"C:\\Users\\мой\\Desktop\\web\\js_constuctor\\package.json","includedInParent":true,"mtime":1602520858648},{"name":"../utils","loc":{"line":1,"column":20},"parent":"C:\\Users\\мой\\Desktop\\web\\js_constuctor\\src\\classes\\sidebar.js","resolved":"C:\\Users\\мой\\Desktop\\web\\js_constuctor\\src\\utils.js"},{"name":"./blocks","loc":{"line":2,"column":36},"parent":"C:\\Users\\мой\\Desktop\\web\\js_constuctor\\src\\classes\\sidebar.js","resolved":"C:\\Users\\мой\\Desktop\\web\\js_constuctor\\src\\classes\\blocks.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sidebar = void 0;\n\nvar _utils = require(\"../utils\");\n\nvar _blocks = require(\"./blocks\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Sidebar = /*#__PURE__*/function () {\n  function Sidebar(selector, updateCallback) {\n    _classCallCheck(this, Sidebar);\n\n    this.$el = document.querySelector(selector);\n    this.update = updateCallback;\n    this.init();\n  }\n\n  _createClass(Sidebar, [{\n    key: \"init\",\n    value: function init() {\n      this.$el.insertAdjacentHTML('afterbegin', this.template);\n      this.$el.addEventListener('submit', this.add.bind(this));\n    }\n  }, {\n    key: \"add\",\n    value: function add(event) {\n      event.preventDefault();\n      var type = event.target.name;\n      var value = event.target.value.value;\n      var styles = event.target.styles.value;\n      var newBlock = type === 'text' ? new _blocks.TextBlock(value, {\n        styles: styles\n      }) : new _blocks.TitleBlock(value, {\n        styles: styles\n      });\n      this.update(newBlock);\n      event.target.value.value = '';\n      event.target.styles.value = '';\n    }\n  }, {\n    key: \"template\",\n    get: function get() {\n      return [(0, _utils.block)('title'), (0, _utils.block)('text')].join('');\n    }\n  }]);\n\n  return Sidebar;\n}();\n\nexports.Sidebar = Sidebar;"},"sourceMaps":null,"error":null,"hash":"ee23d8fe50ffceb1b7cc6373ac30aa0e","cacheData":{"env":{}}}